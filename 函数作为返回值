def lazy_sum(*args):
    def sum():
        ax = 0
        for n in args:
            ax = ax + n
        return ax
    return sum

a = lazy_sum(1,2,3,4,5)
print(a) #当我们调用lazy_sum()时，返回的并不是求和结果，而是求和函数
print(a())  #调用函数f时，才真正计算求和的结果

def calc_sum(*args):
    ax = 0
    for n in args:
        ax = ax + n
    return ax

a = calc_sum(1,2,3,4,5)
print(a)



"""
C:\Users\admin\PycharmProjects\20191220\venv\Scripts\python.exe C:/Users/admin/PycharmProjects/20191220/01.py
<function lazy_sum.<locals>.sum at 0x000001ADAE435CA8>
15
15
"""


请再注意一点，当我们调用lazy_sum()时，每次调用都会返回一个新的函数，即使传入相同的参数：

>>> f1 = lazy_sum(1, 3, 5, 7, 9)
>>> f2 = lazy_sum(1, 3, 5, 7, 9)
>>> f1==f2
False
f1()和f2()的调用结果互不影响。
